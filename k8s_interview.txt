**Kubernetes (K8s) Interview Prep: 20% Concepts That Cover 80% of Questions**

---

### 1. What is Kubernetes?

**Answer:** Kubernetes is an open-source container orchestration platform used to automate deployment, scaling, and management of containerized applications.

**Real-world Example:** You use Docker to containerize your app, and Kubernetes to deploy multiple instances (pods) of it across a cluster.

---

### 2. What is a Pod?

**Answer:** A Pod is the smallest deployable unit in Kubernetes. It can contain one or more containers that share the same network and storage.

**Example:** Running a containerized Node.js app inside a pod.

```yaml
apiVersion: v1
kind: Pod
metadata:
  name: nodeapp
spec:
  containers:
  - name: node
    image: node:18
    ports:
    - containerPort: 3000
```

---

### 3. What is a Deployment?

**Answer:** A Deployment manages ReplicaSets and ensures the desired number of pod replicas are running and updated in a controlled way.

**Example:**

```yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodeapp-deployment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nodeapp
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - name: node
        image: node:18
        ports:
        - containerPort: 3000
```

---

### 4. What is a Service?

**Answer:** A Service is an abstraction that exposes a set of pods as a network service. Types: ClusterIP (default), NodePort, LoadBalancer.

**Example:** Expose backend pods via ClusterIP:

```yaml
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - port: 80
      targetPort: 3000
  type: ClusterIP
```

---

### 5. What is Ingress?

**Answer:** Ingress exposes HTTP and HTTPS routes from outside the cluster to services within the cluster.

**Example:** Route /api to backend service

```yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
spec:
  rules:
  - host: myapp.example.com
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-service
            port:
              number: 80
```

---

### 6. What is ConfigMap and Secret?

**Answer:**

* **ConfigMap:** Stores non-sensitive configuration data.
* **Secret:** Stores sensitive data (e.g., passwords, tokens).

**Example:**

```yaml
apiVersion: v1
kind: Secret
metadata:
  name: db-secret
  namespace: staging
stringData:
  username: admin
  password: pass123
```

Used in Pod:

```yaml
env:
- name: DB_PASSWORD
  valueFrom:
    secretKeyRef:
      name: db-secret
      key: password
```

---

### 7. What is Horizontal Pod Autoscaler (HPA)?

**Answer:** HPA automatically scales the number of pods based on CPU or memory usage.

**Command:**

```bash
kubectl autoscale deployment backend --cpu-percent=60 --min=2 --max=5
```

**Pre-requisite:** metrics-server must be installed.

---

### 8. What are Probes (Readiness, Liveness, Startup)?

**Answer:**

* **ReadinessProbe:** Decides if pod is ready to receive traffic.
* **LivenessProbe:** Restarts pod if app is stuck.
* **StartupProbe:** Waits before checking liveness/readiness (slow apps).

**Example:**

```yaml
readinessProbe:
  httpGet:
    path: /health
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 10
```

---

### 9. What is a PersistentVolume and PersistentVolumeClaim?

**Answer:**

* **PV:** Cluster-wide storage resource.
* **PVC:** User request for storage to bind to a PV.

**Example:**

```yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
```

Used in Pod to mount storage.

---

### 10. What are Namespaces?

**Answer:** Namespaces are used to divide cluster resources between multiple users or environments.

**Real-world Use:** `staging`, `production`, `dev`, and `jenkins` environments.

---

### 11. How does Rolling Update and Rollback work?

**Answer:**

* Kubernetes automatically performs rolling updates when a deployment is changed.
* Use `kubectl rollout undo` to rollback to previous version.

**Commands:**

```bash
kubectl rollout status deployment/frontend
kubectl rollout undo deployment/frontend
```

---

### 12. What is the role of kubelet, kube-proxy, and API Server?

**Answer:**

* **kubelet:** Ensures containers are running in a pod.
* **kube-proxy:** Maintains network rules, routes traffic.
* **API Server:** Exposes K8s API, central communication point.

---

### 13. What is a Helm Chart?

**Answer:** Helm is a package manager for Kubernetes.

**Command Example:**

```bash
helm install myapp ./chart -n staging -f values-staging.yaml
```

---

### 14. How do you troubleshoot a Kubernetes issue?

**Checklist:**

* Check pod status: `kubectl get pods`
* Get logs: `kubectl logs pod-name`
* Describe pod: `kubectl describe pod pod-name`
* Exec into pod: `kubectl exec -it pod-name -- /bin/sh`

---

### 15. What are Labels and Selectors?

**Answer:**

* **Labels:** Key-value pairs attached to objects.
* **Selectors:** Used by services and deployments to identify related pods.

---

### 16. What is a DaemonSet?

**Answer:** Ensures a pod runs on every node.

**Use Case:** Node monitoring agents, log collectors.

---

### 17. How does Service Discovery work in Kubernetes?

**Answer:** Uses CoreDNS to resolve services within the cluster.

**Example:** `mongodb.staging.svc.cluster.local`

---

### 18. What are Init Containers?

**Answer:** Special containers that run before app containers to perform setup tasks.

**Example:** Download config files before app starts.

---

### 19. What are common kubectl commands?

```bash
kubectl get all
kubectl describe pod <pod>
kubectl logs <pod>
kubectl apply -f deployment.yaml
kubectl delete -f svc.yaml
kubectl exec -it <pod> -- /bin/bash
```

---

### 20. How do you handle secrets securely in production?

**Answer:**

* Use Kubernetes Secrets or integrate with AWS Secrets Manager.
* Avoid hardcoding secrets.
* Mount as env vars or volumes.

---

These 20 topics form the core 20% that helps you answer 80% of Kubernetes interview questions with confidence.
